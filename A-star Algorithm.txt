A* algorithm (U, V, C, D)

1. Let U be source and V be destination.
2. Start traversing from the U.
3. Let C = h(n) and D=g(n).
4. Let Ui=(U1,U2,.....,Un) where U1 to Un are intermediate nodes between U and V.
5. Now U => Ui where i = 1st level node
      f(n) = h(n) + g(n)
6. If 
      U => Ui is directly connected where i > 1
      f(n) = h(n) + g(n)
      where is g(n) is backtracking distance from source i.e. U.
      
   else 
      U =>  Ui is connected where i > 1
      f(n) = h(n) + g(n)
      where g(n) is distance which is summation of distance from Ui to U.
      
7. Total A* cost 

   f(i) = âˆ‘ from n=1 to i (f(n))
   
   will be summation from U to V.
